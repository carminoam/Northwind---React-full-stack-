{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noamc\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\01 - Northwind Full Stack\\\\02 - Frontend\\\\src\\\\Components\\\\ProductsArea\\\\UpdateProduct\\\\UpdateProduct.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport notify from \"../../../Services/NotifyService\";\nimport productsService from \"../../../Services/ProductsService\";\nimport \"./UpdateProduct.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProduct() {\n  _s();\n\n  var _formState$errors$nam, _formState$errors$pri, _formState$errors$sto;\n\n  const params = useParams();\n  const id = +params.id;\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState,\n    setValue\n  } = useForm();\n  useEffect(() => {\n    productsService.getOneProduct(id).then(product => {\n      setValue(\"name\", product.name);\n      setValue(\"price\", product.price);\n      setValue(\"stock\", product.stock);\n    }).catch(err => notify.error(err));\n  }, []);\n\n  async function submit(product) {\n    try {\n      product.id = id;\n      await productsService.updateProduct(product);\n      notify.success(\"Product updated.\"); // Navigate back to all products: \n\n      navigate(\"/products\");\n    } catch (err) {\n      notify.error(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateProduct Box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submit),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"name\", {\n          required: {\n            value: true,\n            message: \"Missing product name\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$nam = formState.errors.name) === null || _formState$errors$nam === void 0 ? void 0 : _formState$errors$nam.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        ...register(\"price\", {\n          required: {\n            value: true,\n            message: \"Missing price\"\n          },\n          min: {\n            value: 0,\n            message: \"Price can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Price can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$pri = formState.errors.price) === null || _formState$errors$pri === void 0 ? void 0 : _formState$errors$pri.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Stock: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...register(\"stock\", {\n          required: {\n            value: true,\n            message: \"Missing stock\"\n          },\n          min: {\n            value: 0,\n            message: \"Stock can't be negative\"\n          },\n          max: {\n            value: 1000,\n            message: \"Stock can't exceed 1000\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: (_formState$errors$sto = formState.errors.stock) === null || _formState$errors$sto === void 0 ? void 0 : _formState$errors$sto.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        ...register(\"image\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdateProduct, \"rQC0byDofFdJDI8Wd6S4i0RQh9k=\", false, function () {\n  return [useParams, useNavigate, useForm];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/noamc/OneDrive/שולחן העבודה/01 - Northwind Full Stack/02 - Frontend/src/Components/ProductsArea/UpdateProduct/UpdateProduct.tsx"],"names":["useEffect","useForm","useNavigate","useParams","notify","productsService","UpdateProduct","params","id","navigate","register","handleSubmit","formState","setValue","getOneProduct","then","product","name","price","stock","catch","err","error","submit","updateProduct","success","required","value","message","errors","min","max"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ProductModel from \"../../../Models/ProductModel\";\nimport notify from \"../../../Services/NotifyService\";\nimport productsService from \"../../../Services/ProductsService\";\nimport \"./UpdateProduct.css\";\n\nfunction UpdateProduct(): JSX.Element {\n\n    const params = useParams();\n    const id = +params.id;\n\n    const navigate = useNavigate();\n\n    const { register, handleSubmit, formState, setValue } = useForm<ProductModel>();\n\n    useEffect(() => {\n        productsService.getOneProduct(id)\n            .then(product => {\n                setValue(\"name\", product.name);\n                setValue(\"price\", product.price);\n                setValue(\"stock\", product.stock);\n            })\n            .catch(err => notify.error(err));\n    }, []);\n\n    async function submit(product: ProductModel) {\n        try {\n\n            product.id = id;\n            await productsService.updateProduct(product);\n\n            notify.success(\"Product updated.\");\n\n            // Navigate back to all products: \n            navigate(\"/products\");\n        }\n        catch (err: any) {\n            notify.error(err);\n        }\n    }\n\n    return (\n        <div className=\"UpdateProduct Box\">\n\n            <form onSubmit={handleSubmit(submit)}>\n\n                <h2>Edit Product</h2>\n\n                <label>Name: </label>\n                <input type=\"text\" {...register(\"name\", {\n                    required: { value: true, message: \"Missing product name\" }\n                })} />\n                <span>{formState.errors.name?.message}</span>\n\n                <label>Price: </label>\n                <input type=\"number\" step=\"0.01\" {...register(\"price\", {\n                    required: { value: true, message: \"Missing price\" },\n                    min: { value: 0, message: \"Price can't be negative\" },\n                    max: { value: 1000, message: \"Price can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.price?.message}</span>\n\n                <label>Stock: </label>\n                <input type=\"number\" {...register(\"stock\", {\n                    required: { value: true, message: \"Missing stock\" },\n                    min: { value: 0, message: \"Stock can't be negative\" },\n                    max: { value: 1000, message: \"Stock can't exceed 1000\" },\n                })} />\n                <span>{formState.errors.stock?.message}</span>\n\n                <label>Image: </label>\n                <input type=\"file\" accept=\"image/*\" {...register(\"image\")} />\n\n                <button>Update</button>\n\n            </form>\n\n        </div>\n    );\n}\n\nexport default UpdateProduct;\n"]},"metadata":{},"sourceType":"module"}